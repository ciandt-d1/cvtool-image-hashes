---
swagger: "2.0"
info:
  description: "Image Perceptual Hash services. Search for images that look similar\
    \ to each other."
  version: "v1"
  title: "Kingpick ImageMatch API"
host: "kingpick-image-hash-api.endpoints.ciandt-cognitive-sandbox.cloud.goog"
basePath: "/v1"
tags:
- name: "image-hash"
  description: "Image perceptual hashing management"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /image-hashes:
    post:
      description: "Adds an image signature to the database."
      operationId: "add"
      produces:
      - "application/json"
      parameters:
      - name: "tenant_id"
        in: "query"
        description: "tenant id"
        required: true
        type: "string"
      - name: "project_id"
        in: "query"
        description: "project id"
        required: true
        type: "string"
      - in: "body"
        name: "image_hash_request"
        description: "ImageHash to create"
        required: true
        schema:
          $ref: "#/definitions/ImageHashRequest"
      responses:
        201:
          description: "A project"
          schema:
            $ref: "#/definitions/ImageMatchResponse"
      x-swagger-router-controller: "image_hash.controllers.default_controller"
  /image-hashes/search:
    post:
      description: "Searches for a similar image in the database. Scores range from\
        \ 0 to 100, with 100 being a perfect match."
      operationId: "search"
      produces:
      - "application/json"
      parameters:
      - name: "tenant_id"
        in: "query"
        description: "tenant id"
        required: true
        type: "string"
      - name: "project_id"
        in: "query"
        description: "project id"
        required: true
        type: "string"
      - in: "body"
        name: "search_request"
        description: "Search parameters"
        required: true
        schema:
          $ref: "#/definitions/ImageHashSearchRequest"
      responses:
        200:
          description: "A list of matched images with respective scores"
          schema:
            $ref: "#/definitions/ImageMatchSearchResponse"
      x-swagger-router-controller: "image_hash.controllers.default_controller"
definitions:
  ImageHashRequest:
    type: "object"
    properties:
      filepath:
        type: "string"
        description: "The path to save the image to in the database. If another image\
          \ already exists at the given path, it will be overwritten."
      url:
        type: "string"
        description: "The image to add to the database."
      metadata:
        $ref: "#/definitions/Metadata"
  ImageHashSearchRequest:
    type: "object"
    properties:
      all_orientations:
        type: "boolean"
        description: "Whether or not to search for similar 90 degree rotations of\
          \ the image."
        default: true
      url:
        type: "string"
        description: "The url of the image tha we will search for matches"
      distance_cutoff:
        type: "number"
        format: "float"
        description: "Maximum image signature distance to be considered a match (default\
          \ 0.45)"
        default: 4.5
  ImageMatchResponse:
    type: "object"
    properties:
      method:
        type: "string"
      error:
        type: "string"
      status:
        type: "string"
  ImageMatchSearchResponse:
    type: "object"
    properties:
      method:
        type: "string"
      error:
        type: "string"
      status:
        type: "string"
      results:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/ImageMatchSearchItem"
  ImageMatchSearchItem:
    type: "object"
    properties:
      score:
        type: "number"
        format: "float"
      filepath:
        type: "string"
      metadata:
        $ref: "#/definitions/Metadata"
  Metadata:
    type: "object"
    additionalProperties:
      type: "string"
